///
/// AndroidHaptics.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

/**
 * Represents the JS union `AndroidHaptics`, backed by a C++ enum.
 */
public typealias AndroidHaptics = margelo.nitro.haptics.AndroidHaptics

public extension AndroidHaptics {
  /**
   * Get a AndroidHaptics for the given String value, or
   * return `nil` if the given value was invalid/unknown.
   */
  init?(fromString string: String) {
    switch string {
      case "confirm":
        self = .confirm
      case "reject":
        self = .reject
      case "gesture-start":
        self = .gestureStart
      case "gesture-end":
        self = .gestureEnd
      case "toggle-on":
        self = .toggleOn
      case "toggle-off":
        self = .toggleOff
      case "clock-tick":
        self = .clockTick
      case "context-click":
        self = .contextClick
      case "drag-start":
        self = .dragStart
      case "keyboard-tap":
        self = .keyboardTap
      case "keyboard-press":
        self = .keyboardPress
      case "keyboard-release":
        self = .keyboardRelease
      case "long-press":
        self = .longPress
      case "virtual-key":
        self = .virtualKey
      case "virtual-key-release":
        self = .virtualKeyRelease
      case "no-haptics":
        self = .noHaptics
      case "segment-tick":
        self = .segmentTick
      case "segment-frequent-tick":
        self = .segmentFrequentTick
      case "text-handle-move":
        self = .textHandleMove
      default:
        return nil
    }
  }

  /**
   * Get the String value this AndroidHaptics represents.
   */
  var stringValue: String {
    switch self {
      case .confirm:
        return "confirm"
      case .reject:
        return "reject"
      case .gestureStart:
        return "gesture-start"
      case .gestureEnd:
        return "gesture-end"
      case .toggleOn:
        return "toggle-on"
      case .toggleOff:
        return "toggle-off"
      case .clockTick:
        return "clock-tick"
      case .contextClick:
        return "context-click"
      case .dragStart:
        return "drag-start"
      case .keyboardTap:
        return "keyboard-tap"
      case .keyboardPress:
        return "keyboard-press"
      case .keyboardRelease:
        return "keyboard-release"
      case .longPress:
        return "long-press"
      case .virtualKey:
        return "virtual-key"
      case .virtualKeyRelease:
        return "virtual-key-release"
      case .noHaptics:
        return "no-haptics"
      case .segmentTick:
        return "segment-tick"
      case .segmentFrequentTick:
        return "segment-frequent-tick"
      case .textHandleMove:
        return "text-handle-move"
    }
  }
}
